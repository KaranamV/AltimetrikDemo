package com.altimetrik.covid.tracking.CovidStatistics.Controller;

import java.util.ArrayList;
import java.util.List;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.client.RestTemplate;

import com.altimetrik.covid.tracking.CovidStatistics.Model.CovidMetrics;

@RestController
public class Controller {

	@Autowired
	RestTemplate restTemplate;

	@Autowired
	CovidMetrics covidMetrics;

	@Value("${service.url}")
	String serviceURL;

	
	@RequestMapping(value = "/states/{stateCode}", method = RequestMethod.POST, produces = {MediaType.APPLICATION_JSON_VALUE })
	public List<CovidMetrics> getMsg(@PathVariable String stateCode) throws JSONException {
		
		String serviceurl = serviceURL + "/states/" + stateCode + "/current.json";
		
		String val = null;
		ResponseEntity<String> response = null;
		List<CovidMetrics> metricsList = new ArrayList<CovidMetrics>();

		response = restTemplate.getForEntity(serviceurl, String.class);

		val = response.getBody().toString();
		JSONObject jsonObj = new JSONObject(val);
		
		JSONArray res = jsonObj.getJSONArray("Results");
		if (res.length() < 1) {
			System.out.println("404 bad request");
            return metricsList;
		} else {
			for (int i = 0; i < res.length(); i++) {
				CovidMetrics metrics = new CovidMetrics();
				metrics.setPositive(res.getJSONObject(i).getInt("positive"));
				metrics.setNegative(res.getJSONObject(i).getInt("negative"));
				metrics.setTotalTestResults(res.getJSONObject(i).getInt("totalTestResults"));
				metrics.setDeaths(res.getJSONObject(i).getInt("death"));
				
				metricsList.add(metrics);
			}

		}
		return mfglist;
	}
		
}
